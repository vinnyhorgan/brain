---
import type { MarkdownHeading } from 'astro'
import TOCHeading from './TableOfContentsHeading.astro'
import type { TocItem, TocOpts } from '@types'

/** Inject a ToC entry as deep in the tree as its `depth` property requires. */
function injectChild(items: TocItem[], item: TocItem): void {
  const lastItem = items.at(-1)
  if (!lastItem || lastItem.depth >= item.depth) {
    items.push(item)
  } else {
    injectChild(lastItem.children, item)
    return
  }
}

function generateToc(
  headings: ReadonlyArray<MarkdownHeading>,
  { maxHeadingLevel = 4, minHeadingLevel = 2 }: TocOpts = {},
) {
  // by default this ignores/filters out h1 and h5 heading(s)
  const bodyHeadings = headings.filter(
    ({ depth }) => depth >= minHeadingLevel && depth <= maxHeadingLevel,
  )
  const toc: Array<TocItem> = []

  for (const heading of bodyHeadings) injectChild(toc, { ...heading, children: [] })

  return toc
}

interface Props {
  headings: MarkdownHeading[]
}

const { headings } = Astro.props

const toc = generateToc(headings)
---

<details
  open
  class="relative text-foreground/90 bg-foreground/6 xl:bg-transparent px-8 xl:pr-2 py-6 mt-5 xl:mt-0 w-full rounded-xl border-3 xl:border-none border-accent/10 xl:sticky xl:top-10 xl:basis-[280px] 2xl:basis-[340px] xl:order-2 xl:shrink-0"
>
  <summary
    class="list-none marker:hidden marker:content-[''] before:content-['>'] before:text-accent before:font-semibold before:absolute before:left-3 cursor-pointer"
    >table of contents</summary
  >
  <nav class="w-full text-sm">
    <ol class="mt-4 flex flex-col max-w-full">
      {toc.map((heading) => <TOCHeading heading={heading} />)}
    </ol>
  </nav>
</details>

<script>
  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault()
      const href = anchor.getAttribute('href')
      if (!href) return
      document.querySelector(href)?.scrollIntoView({
        behavior: 'smooth',
      })
    })
  })
</script>

<style>
  details[open] summary:before {
    transform: rotate(90deg);
  }
</style>
