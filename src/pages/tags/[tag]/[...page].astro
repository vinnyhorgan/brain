---
import type { GetStaticPaths } from 'astro'
import Layout from '@layouts/Layout.astro'
import { getSortedPosts } from '@utils'
import PostPreviewsWithYear from '@components/PostPreviewsWithYear.astro'
import Pagination from '@components/Pagination.astro'
import BlockHeader from '@components/BlockHeader.astro'
import siteConfig from '../../../site.config'

// Note: Pagination like '/', '/2', '/3' only works with spread param like [...page]
export const getStaticPaths = (async ({ paginate }) => {
  const sortedPosts = await getSortedPosts()
  const allTags = new Set(sortedPosts.flatMap((post) => post.data.tags))
  // flatMap is necessary here to lift paginate lists into top-level list
  const pages = [...allTags].flatMap((tag) => {
    const postsWithTag = sortedPosts.filter((post) => {
      return new Set(post.data.tags).has(tag)
    })
    return paginate(postsWithTag, { params: { tag }, pageSize: siteConfig.pageSize })
  })
  return pages
}) satisfies GetStaticPaths

const { page } = Astro.props
const { tag } = Astro.params
---

<Layout>
  <BlockHeader>#{tag}</BlockHeader>
  <PostPreviewsWithYear posts={page.data} />
  <Pagination
    prevLink={page.url.prev ? encodeURI(page.url.prev) : undefined}
    prevText="Newer Posts"
    nextLink={page.url.next ? encodeURI(page.url.next) : undefined}
    nextText="Older Posts"
  />
</Layout>
